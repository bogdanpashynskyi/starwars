{"version":3,"sources":["components/Home.js","components/Starships.js","api/_helper.js","api/getMovies.js","common/DataTable.js","common/DetailsPage.js","common/Search.js","common/Pagination.js","components/Movies.js","api/getPeople.js","components/People.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","React","Component","Starships","state","starships","isLoaded","loadStarships","_callee","regenerator_default","wrap","_context","prev","next","stop","get","url","fetch","then","response","json","getIdFromUrl","_url$match","match","Object","slicedToArray","getResources","_ref","asyncToGenerator","mark","_ref2","results","count","movies","sent","map","item","objectSpread","id","abrupt","apply","this","arguments","DataTable","items","_this","props","config","_this$state","entries","key","value","className","isSortable","title","DataTable_Rows","Rows","_ref3","keys","DataTable_Cell","column","render","Cell","_ref4","DetailsPage","movie","SearchBar","type","withRouter","location","_ref$perPage","perPage","pagesCount","Math","ceil","pages","i","push","getSearchWithPage","page","urlParams","URLSearchParams","search","set","toString","Link","to","pathname","moviesColumnConfig","isSearchable","concat","release_date","episode_id","director","producer","opening_crawl","MoviesPage","Switch","Route","exact","path","component","Movies","MovieDetails","setState","Search","common_Pagination","DataTable_DataTable","params","_this$state2","common_DetailsPage","_ref$page","people","_x","peopleColumnConfig","name","person","mass","hair_color","birth_year","gender","height","species","homeworld","skin_color","PeoplePage","People","PeopleDetails","getPageFromUrl","loadPeople","App","BrowserRouter","basename","process","c","NavLink","Boolean","window","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.585c86de.chunk.js","sourcesContent":["import React from 'react'\n\nexport default class Home extends React.Component {\n  render() {\n    return <h3>All the Star Wars data you've ever wanted</h3>\n  }\n}","import React from 'react';\n\nexport default class Starships extends React.Component {\n  state = {\n    starships: [],\n    isLoaded: false,\n  }\n  componentDidMount() {\n\n  }\n\n  loadStarships = async () => {\n  }\n  render() {\n    return <div></div>\n  }\n}\n","const BASE_API_URL = 'https://swapi.co/api/'\n\nexport const get = url => { \n  return fetch(BASE_API_URL + url)\n    .then(response => {\n      return response.json()\n    })\n}\n\nexport const getIdFromUrl = url => {\n  const regExp = /(\\d+)\\/$/\n  const [, id] = url.match(regExp)\n\n  return id;\n}\n\n","import { get, getIdFromUrl } from './_helper';\n\nconst BASE_URL = 'films';\n\nexport const getResources = async () => {\n  const { results, count } = await get(BASE_URL);\n\n  const movies = results.map(item => {\n    return {\n      ...item, \n      id: getIdFromUrl(item.url)\n    }\n  })\n\n  return {movies, count}\n}\n\nexport const getResourceItemById = (id) => {\n  return get(`${BASE_URL}/${id}`)\n}\n","import React, { Component } from 'react'\n\nexport default class DataTable extends Component {\n  state = {\n    items: this.props.items,\n    config: this.props.config,\n  }\n\n  render() {\n    const { items, config } = this.state\n\n    return (\n      <table>\n        <thead>\n          <tr>\n            {Object.entries(config).map(([key, value]) => \n              <th\n              key={key}\n              className={value.isSortable ? \n                \"App__header-sortable\" : \"\"\n              }\n              >\n              {value.title}\n              </th>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {items.map(item => { return (\n            <Rows\n            key={item.id} \n            item={item} \n            config={config} \n            />)\n          })}\n        </tbody>\n      </table>\n    )\n  }\n}\n\nconst Rows = ({item, config}) => (\n  <tr>\n    {Object.keys(config).map(key => (\n      <Cell \n      key={key}\n      item={item}\n      column={key}\n      render={config[key].render}\n      />\n    ))}\n  </tr>\n)\n\nconst Cell = ({ item, column, render }) => (\n  <td>{render ? render(item) : item[column]}</td>\n)\n\n","import React from 'react' \n\nconst DetailsPage = (props) => {\n  const { movie, isLoaded, config } = props\n  \n  return (\n    <div>\n      <table className=\"Details__container\">\n        <tbody>\n        {isLoaded ?\n        Object.entries(config).map(([key, value]) =>\n        <tr\n        key={key}\n        >\n          <td\n          className=\"Details__title\">\n          {value.title}\n          </td>\n          <td\n          className=\"Details__content\">\n          {movie[key]}\n          </td>\n        </tr>\n      ): \n      <div> the movie is loading...</div>}       \n        </tbody>\n    </table>\n\n  </div>\n  )\n}\n\nexport default DetailsPage","import React from 'react' \n\nconst SearchBar = (props) => {\n  \n  return (\n    <div>\n      <input type=\"search\"/>\n    </div>\n  )\n}\n\nexport default SearchBar","import React from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nconst Pagination = ({ location, count, perPage = 10 }) => {\n  const pagesCount = Math.ceil(count/perPage);\n  const pages = []\n\n  for (let i = 0; pagesCount > i; i++) {\n    pages.push(i + 1)\n  }\n\n  const getSearchWithPage = (page) => {\n    const urlParams = new URLSearchParams(location.search)\n    \n    urlParams.set('page', page)\n    return urlParams.toString();\n  }\n\n  return (\n    <div>\n      {pages.map(item =>\n      <Link \n        key={item}\n        to={{\n          pathname: location.pathname,\n          search: getSearchWithPage(item), \n        }}\n      >\n      {item}\n      </Link>\n      \n      )}\n    </div>\n  )\n}\n\nPagination.propTypes = {\n  count: PropTypes.number.isRequired,\n  page: PropTypes.number,\n  perPage: PropTypes.number,\n}\n\nexport default withRouter(Pagination)","import React from 'react'\nimport { Link, Route, Switch} from 'react-router-dom'\n\nimport { getResources, getResourceItemById } from '../api/getMovies'\nimport DataTable from '../common/DataTable'\nimport DetailsPage from '../common/DetailsPage'\nimport SearchBar from '../common/Search'\nimport Pagination from '../common/Pagination'\n\nexport const moviesColumnConfig = {\n  title: {\n    title: 'Title',\n    isSortable: true,\n    isSearchable: true,\n    render: movie => (\n      <Link \n      to={`/movies/${movie.id}`}>\n      {movie.title}\n      </Link>\n    ),\n  },\n  release_date: {\n    title: 'Release Date',\n  },\n  episode_id: {\n    title: 'Episode #',\n    isSortable: true,\n  },\n  director: {\n    title: 'Director',\n    isSortable: true,\n  },\n  producer: {\n    title: 'Producer',\n    isSortable: true,\n  },\n  opening_crawl: {\n    title: 'Opening Crawl',\n    isSearchable: true,\n  },\n}\n\nexport const MoviesPage = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/movies\" component={Movies}/> \n      <Route path=\"/movies/:id\" component={MovieDetails}/> \n    </Switch>\n  )\n}\n\nclass Movies extends React.Component {\n  state = {\n    movies: [],\n    isLoaded: false,\n    count: 0,\n    page: 1,\n    config: moviesColumnConfig,\n  }\n\n  async componentDidMount() {\n    const { count, movies } = await getResources()\n\n    this.setState({ \n      count,\n      movies,\n      isLoaded: true,\n    })\n  }\n\n  render() {\n    const { config, movies, count, page, isLoaded } = this.state\n\n    return (\n      <div>\n        {isLoaded ?\n        <div>\n          <SearchBar/>\n          <Pagination\n            count={count}\n            page={page}\n            />\n          <DataTable \n          config={config}\n          items={movies}\n          /> \n        </div> : \n        <p> movies are loading...</p>} \n      </div>\n    )\n  }\n}\n\nclass MovieDetails extends React.Component {\n  state = {\n    movie: null,\n    isLoaded: false,\n    config: moviesColumnConfig\n  }\n\n  async componentDidMount() {\n    const movie = await getResourceItemById(this.props.match.params.id)\n\n    this.setState( { \n      movie,\n      isLoaded: true,\n    })\n  }\n\n  render() {\n    const { movie, isLoaded, config } = this.state\n    return (\n      <div>\n        <DetailsPage \n          movie={movie}\n          isLoaded={isLoaded}\n          config={config}\n        />\n      </div>\n    )\n  }\n}","import { get, getIdFromUrl } from './_helper';\n\nconst BASE_URL = 'people';\n\nexport const getResources = async ({ page = 1 }) => {\n  const urlParams = new URLSearchParams()\n  urlParams.set('page', page)\n  const { results, count } = await get(`${BASE_URL}?${urlParams.toString()}`);\n\n  const people = results.map(item => {\n    return {\n      ...item, \n      id: getIdFromUrl(item.url)\n    }\n  })\n\n  return {people, count}\n}\n\nexport const getResourceItemById = (id) => {\n  return get(`${BASE_URL}/${id}`)\n}","import React from 'react'\nimport { Link, Route, Switch } from 'react-router-dom'\n\nimport { getResources, getResourceItemById } from '../api/getPeople'\nimport DataTable from '../common/DataTable'\nimport DetailsPage from '../common/DetailsPage'\nimport Pagination from '../common/Pagination'\n\nexport const peopleColumnConfig = {\n  name: {\n    title: 'Name',\n    isSortable: true,\n    isSearchable: true,\n    render: person => (\n      <Link to={`/people/${person.id}`}>{person.name}</Link>\n    ),\n  },\n  mass: {\n    title: 'Mass',\n    isSortable: true,\n  },\n  hair_color: {\n    title: 'Hair Color',\n  },\n  birth_year: {\n    title: 'Born',\n    isSortable: true,\n  },\n  gender: {\n    title: 'Gender',\n  },\n  height: {\n    title: 'Height',\n  },\n  species: {\n    title: 'Species',\n  },\n  homeworld: {\n    title: 'Homeworld ',\n  },\n  skin_color: {\n    title: 'Skin Color',\n  },\n};\n\nconst PeoplePage = () => {\n   return (\n   <Switch>\n     <Route exact path=\"/people\" component={People}/>\n     <Route path=\"/people/:id\" component={PeopleDetails}/>\n   </Switch>\n   )\n }\n\n export default PeoplePage\n\n class People extends React.Component {\n  state = {\n    people: [],\n    count: 0,\n    page: 1,\n    isLoaded: false,\n    config: peopleColumnConfig,\n  }\n\n  componentDidUpdate() {\n    this.getPageFromUrl()\n  }\n\n  componentDidMount() {\n    this.getPageFromUrl()\n  }\n\n  getPageFromUrl = () => {\n    const { location } = this.props\n    const urlParams = new URLSearchParams(location.search)\n    const page = +urlParams.get('page') || 1\n\n    if(page === this.state.page) {\n      return;\n    }\n    \n    this.setState({ page }, this.loadPeople)\n  }\n\n  loadPeople = async () => {\n    const { page } = this.state\n    const {count, people} = await getResources({ page })\n\n    this.setState({ \n      people,\n      count,\n      isLoaded: true,\n    })\n  }\n\n  render() {\n    const { config, people, count, page, isLoaded } = this.state\n\n    return (\n      <div>\n        {isLoaded ? \n        <div>\n          <Pagination\n            page={page}\n            count={count}\n            />\n          <DataTable \n          config={config}\n          items={people}/> \n        </div> : \n        <p> characters are loading...</p>} \n      </div>\n    )\n  }\n}\n\nclass PeopleDetails extends React.Component {\n  state = {\n    people: null,\n    isLoaded: false,\n    config: peopleColumnConfig\n  }\n\n  async componentDidMount() {\n    const person = await getResourceItemById(this.props.match.params.id)\n\n    this.setState( { \n      person,\n      isLoaded: true,\n    })\n  }\n\n  render() {\n    const { person, isLoaded, config } = this.state\n    return (\n      <div>\n        <DetailsPage \n          movie={person}\n          isLoaded={isLoaded}\n          config={config}\n        />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, NavLink, Switch } from 'react-router-dom'\nimport './App.css'\n\nimport Home from './components/Home'\nimport Starships from './components/Starships'\nimport { MoviesPage } from './components/Movies'\nimport PeoplePage from './components/People'\n\nclass App extends Component {\n  render() {\n    return ( \n        <Router basename={process.env.PUBLIC_URL}c>\n          <div className=\"App\">\n            <h2>Star Wars</h2>\n            \n            <div className=\"App__nav-links\">\n              <NavLink className=\"App__navlink\" to=\"/home\">Home</NavLink>\n              <NavLink className=\"App__navlink\" to=\"/starships\">Starships</NavLink>\n              <NavLink className=\"App__navlink\" to=\"/movies\">Movies</NavLink>\n              <NavLink className=\"App__navlink\" to=\"/people\">People</NavLink>\n            </div>\n\n            <Switch>\n              <Route exact path=\"/\" component={Home}/> \n              <Route path=\"/home\" component={Home}/> \n              <Route path=\"/starships\" component={Starships} /> \n              <Route path=\"/movies\" component={MoviesPage} /> \n              <Route path=\"/people\" component={PeoplePage}/> \n              <Route render={() => {return 'Page Not Found'}}/>\n            </Switch>\n            \n          </div>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}